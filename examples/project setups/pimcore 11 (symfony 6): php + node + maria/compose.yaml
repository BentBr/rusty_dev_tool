services:
    redis:
        image: redis:alpine

    db:
        image: mysql:8.0-oracle
        working_dir: /application
        command:
          [
              mysqld,
              --character-set-server=utf8mb4,
              --collation-server=utf8mb4_unicode_ci
          ]
        volumes:
            - database:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=ROOT
            - MYSQL_DATABASE=database
            - MYSQL_USER=user
            - MYSQL_PASSWORD=pass
        ports:
            - "3306"

    web:
        image: nginxinc/nginx-unprivileged:1.25-alpine
        volumes:
            - .:/var/www/html
            - ./.local/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        ports:
            - "8080"
        depends_on:
            - php
        environment:
            - VIRTUAL_HOST=.project-key.docker

    # if your main folder has a composer.json we assume you want to use php as main tool.
    php:
        image: pimcore/pimcore:php8.2-debug-latest
        volumes:
            - .:/var/www/html
        environment:
            - APP_ENV=docker
            - COMPOSER_HOME=/tmp/composer
            - COMPOSER_MEMORY_LIMIT=-1
            - MYSQL_USER=user
            - MYSQL_PASS=pass
            - MYSQL_DATABASE=database
            - MYSQL_HOST=db
            - PIMCORE_SYMFONY_CACHE_DIRECTORY=/tmp/private-var/cache
            - PIMCORE_CACHE_DIRECTORY=/tmp/private-var/cache/pimcore
            - PIMCORE_SYSTEM_TEMP_DIRECTORY=/tmp/private-var/tmp
            # Set this one for detection of the main container service
            - MAIN_SERVICE=php

    messenger:
        extends:
            service: php
        entrypoint: /bin/bash
        command:
            - -c
            - >
                while true; do
                  /var/www/html/bin/console messenger:consume pimcore_core pimcore_maintenance pimcore_image_optimize pimcore_scheduled_tasks pimcore_asset_update --time-limit=300 -vv
                  sleep 5
                done

    node:
        image: node:20-alpine
        depends_on:
            - php
        command: sh -c "cd /var/www/html && yarn install && yarn dev-server && tail -f /dev/null" # preventing it from stopping again
        volumes:
            - ./:/var/www/html:cached
        working_dir: /var/www/html
        networks:
            default:
                aliases:
                    - node.project-key.docker
        environment:
            - VIRTUAL_HOST=node.project-key.docker

    mail:
        image: schickling/mailcatcher
        ports:
            - '1080'
        environment:
            - VIRTUAL_HOST=mail.project-key.docker
            - VIRTUAL_PORT=1080

volumes:
    database:
