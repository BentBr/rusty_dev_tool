name: Release

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                # Windows is not yet tested and supported (actually we know it cannot work atm)
                os: [ubuntu-latest, macos-latest, windows-latest]
                target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: ${{ matrix.target }}

            - name: Install dependencies
              run: rustup target add ${{ matrix.target }}

            - name: Build
              run: cargo build --release --target ${{ matrix.target }}

            - name: Archive binary
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ runner.os }}-binary
                  path: target/${{ matrix.target }}/release/your_tool_name

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download Linux binary
              uses: actions/download-artifact@v2
              with:
                  name: ubuntu-latest-binary
                  path: ./binaries/ubuntu
            - name: Download macOS binary
              uses: actions/download-artifact@v2
              with:
                  name: macos-latest-binary
                  path: ./binaries/macos
            - name: Download Windows binary
              uses: actions/download-artifact@v2
              with:
                  name: windows-latest-binary
                  path: ./binaries/windows

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Linux binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./binaries/ubuntu/your_tool_name
                  asset_name: your_tool_name-linux
                  asset_content_type: application/octet-stream

            - name: Upload macOS binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./binaries/macos/your_tool_name
                  asset_name: your_tool_name-macos
                  asset_content_type: application/octet-stream

            - name: Upload Windows binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./binaries/windows/your_tool_name.exe
                  asset_name: your_tool_name-windows.exe
                  asset_content_type: application/octet-stream
