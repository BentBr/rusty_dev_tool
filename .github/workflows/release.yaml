name: Release

on:
    push:
        branches:
            - main
    release:
        types: [ published ]

jobs:
    build-linux:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Set up Rust
                uses: actions-rs/toolchain@v1
                with:
                    toolchain: stable
                    target: x86_64-unknown-linux-gnu

            -   name: Install dependencies
                run: rustup target add x86_64-unknown-linux-gnu

            -   name: Build
                run: cargo build --release --target x86_64-unknown-linux-gnu

            -   name: Archive binary
                uses: actions/upload-artifact@v2
                with:
                    name: rdt-linux-${{ github.event.release.tag_name }}
                    path: target/x86_64-unknown-linux-gnu/release/rdt

    build-macos-amd64:
        runs-on: macos-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Set up Rust
                uses: actions-rs/toolchain@v1
                with:
                    toolchain: stable
                    target: x86_64-apple-darwin

            -   name: Install dependencies
                run: rustup target add x86_64-apple-darwin

            -   name: Build
                run: cargo build --release --target x86_64-apple-darwin

            -   name: Archive binary
                uses: actions/upload-artifact@v2
                with:
                    name: rdt-macos-amd64-${{ github.event.release.tag_name }}
                    path: target/x86_64-apple-darwin/release/rdt

    build-macos-arm64:
        runs-on: macos-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Set up Rust
                uses: actions-rs/toolchain@v1
                with:
                    toolchain: stable
                    target: aarch64-apple-darwin

            -   name: Install dependencies
                run: rustup target add aarch64-apple-darwin

            -   name: Build
                run: cargo build --release --target aarch64-apple-darwin

            -   name: Archive binary
                uses: actions/upload-artifact@v2
                with:
                    name: rdt-macos-arm64-${{ github.event.release.tag_name }}
                    path: target/aarch64-apple-darwin/release/rdt

    # Windows is not yet tested and supported (actually we know it cannot work atm)
    build-windows:
        runs-on: windows-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Set up Rust
                uses: actions-rs/toolchain@v1
                with:
                    toolchain: stable
                    target: x86_64-pc-windows-msvc

            -   name: Install dependencies
                run: rustup target add x86_64-pc-windows-msvc

            -   name: Build
                run: cargo build --release --target x86_64-pc-windows-msvc

            -   name: Archive binary
                uses: actions/upload-artifact@v2
                with:
                    name: rdt-windows-${{ github.event.release.tag_name }}.exe
                    path: target/x86_64-pc-windows-msvc/release/rdt.exe

    release:
        needs: [ build-linux, build-macos-amd64, build-macos-arm64, build-windows ]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Download Linux binary
                uses: actions/download-artifact@v2
                with:
                    name: rdt-linux-${{ github.event.release.tag_name }}
                    path: ./binaries/linux

            -   name: Download macOS AMD64 binary
                uses: actions/download-artifact@v2
                with:
                    name: rdt-macos-amd64-${{ github.event.release.tag_name }}
                    path: ./binaries/macos/amd64

            -   name: Download macOS ARM64 binary
                uses: actions/download-artifact@v2
                with:
                    name: rdt-macos-arm64-${{ github.event.release.tag_name }}
                    path: ./binaries/macos/arm64

            -   name: Download Windows binary
                uses: actions/download-artifact@v2
                with:
                    name: rdt-windows-${{ github.event.release.tag_name }}.exe
                    path: ./binaries/windows

            -   name: Create Release
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: ${{ github.event.release.tag_name }}
                    release_name: Release ${{ github.event.release.tag_name }}
                    draft: false
                    prerelease: false

            -   name: Upload Linux binary
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./binaries/linux/rdt
                    asset_name: rdt-linux-${{ github.event.release.tag_name }}
                    asset_content_type: application/octet-stream

            -   name: Upload macOS AMD64 binary
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./binaries/macos/amd64/rdt
                    asset_name: rdt-macos-amd64-${{ github.event.release.tag_name }}
                    asset_content_type: application/octet-stream

            -   name: Upload macOS ARM64 binary
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./binaries/macos/arm64/rdt
                    asset_name: rdt-macos-arm64-${{ github.event.release.tag_name }}
                    asset_content_type: application/octet-stream

            -   name: Upload Windows binary
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./binaries/windows/rdt.exe
                    asset_name: rdt-windows-${{ github.event.release.tag_name }}.exe
                    asset_content_type: application/octet-stream
